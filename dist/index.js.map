{"version":3,"file":"index.js","sources":["../src/virtual.ts","../src/props.ts","../src/item.tsx","../src/virtual-list.tsx"],"sourcesContent":["/**\n * virtual list core calculating center\n */\n\nconst DIRECTION_TYPE = {\n  FRONT: 'FRONT', // scroll up or left\n  BEHIND: 'BEHIND', // scroll down or right\n};\nconst CALC_TYPE = {\n  INIT: 'INIT',\n  FIXED: 'FIXED',\n  DYNAMIC: 'DYNAMIC',\n};\nconst LEADING_BUFFER = 2;\n\nexport default class Virtual {\n  constructor(param, callUpdate) {\n    this.init(param, callUpdate);\n  }\n\n  init(param, callUpdate) {\n    // param data\n    this.param = param;\n    this.callUpdate = callUpdate;\n\n    // size data\n    this.sizes = new Map();\n    this.firstRangeTotalSize = 0;\n    this.firstRangeAverageSize = 0;\n    this.lastCalcIndex = 0;\n    this.fixedSizeValue = 0;\n    this.calcType = CALC_TYPE.INIT;\n\n    // scroll data\n    this.offset = 0;\n    this.direction = '';\n\n    // range data\n    this.range = Object.create(null);\n    if (param) {\n      this.checkRange(0, param.keeps - 1);\n    }\n\n    // benchmark test data\n    // this.__bsearchCalls = 0\n    // this.__getIndexOffsetCalls = 0\n  }\n\n  destroy() {\n    this.init(null, null);\n  }\n\n  // return current render range\n  getRange() {\n    const range = Object.create(null);\n    range.start = this.range.start;\n    range.end = this.range.end;\n    range.padFront = this.range.padFront;\n    range.padBehind = this.range.padBehind;\n    return range;\n  }\n\n  isBehind() {\n    return this.direction === DIRECTION_TYPE.BEHIND;\n  }\n\n  isFront() {\n    return this.direction === DIRECTION_TYPE.FRONT;\n  }\n\n  // return start index offset\n  getOffset(start) {\n    return (\n      (start < 1 ? 0 : this.getIndexOffset(start)) + this.param.slotHeaderSize\n    );\n  }\n\n  updateParam(key, value) {\n    if (this.param && key in this.param) {\n      // if uniqueIds change, find out deleted id and remove from size map\n      if (key === 'uniqueIds') {\n        this.sizes.forEach((v, key) => {\n          if (!value.includes(key)) {\n            this.sizes.delete(key);\n          }\n        });\n      }\n      this.param[key] = value;\n    }\n  }\n\n  // save each size map by id\n  saveSize(id, size) {\n    this.sizes.set(id, size);\n\n    // we assume size type is fixed at the beginning and remember first size value\n    // if there is no size value different from this at next comming saving\n    // we think it's a fixed size list, otherwise is dynamic size list\n    if (this.calcType === CALC_TYPE.INIT) {\n      this.fixedSizeValue = size;\n      this.calcType = CALC_TYPE.FIXED;\n    } else if (\n      this.calcType === CALC_TYPE.FIXED &&\n      this.fixedSizeValue !== size\n    ) {\n      this.calcType = CALC_TYPE.DYNAMIC;\n      // it's no use at all\n      delete this.fixedSizeValue;\n    }\n\n    // calculate the average size only in the first range\n    if (\n      this.calcType !== CALC_TYPE.FIXED &&\n      typeof this.firstRangeTotalSize !== 'undefined'\n    ) {\n      if (\n        this.sizes.size <\n        Math.min(this.param.keeps, this.param.uniqueIds.length)\n      ) {\n        this.firstRangeTotalSize = [...this.sizes.values()].reduce(\n          (acc, val) => acc + val,\n          0,\n        );\n        this.firstRangeAverageSize = Math.round(\n          this.firstRangeTotalSize / this.sizes.size,\n        );\n      } else {\n        // it's done using\n        delete this.firstRangeTotalSize;\n      }\n    }\n  }\n\n  // in some special situation (e.g. length change) we need to update in a row\n  // try goiong to render next range by a leading buffer according to current direction\n  handleDataSourcesChange() {\n    let start = this.range.start;\n\n    if (this.isFront()) {\n      start = start - LEADING_BUFFER;\n    } else if (this.isBehind()) {\n      start = start + LEADING_BUFFER;\n    }\n\n    start = Math.max(start, 0);\n\n    this.updateRange(this.range.start, this.getEndByStart(start));\n  }\n\n  // when slot size change, we also need force update\n  handleSlotSizeChange() {\n    this.handleDataSourcesChange();\n  }\n\n  // calculating range on scroll\n  handleScroll(offset) {\n    this.direction =\n      offset < this.offset ? DIRECTION_TYPE.FRONT : DIRECTION_TYPE.BEHIND;\n    this.offset = offset;\n\n    if (!this.param) {\n      return;\n    }\n\n    if (this.direction === DIRECTION_TYPE.FRONT) {\n      this.handleFront();\n    } else if (this.direction === DIRECTION_TYPE.BEHIND) {\n      this.handleBehind();\n    }\n  }\n\n  // ----------- public method end -----------\n\n  handleFront() {\n    const overs = this.getScrollOvers();\n    // should not change range if start doesn't exceed overs\n    if (overs > this.range.start) {\n      return;\n    }\n    // move up start by a buffer length, and make sure its safety\n    const start = Math.max(overs - this.param.buffer, 0);\n    this.checkRange(start, this.getEndByStart(start));\n  }\n\n  handleBehind() {\n    const overs = this.getScrollOvers();\n    // range should not change if scroll overs within buffer\n    if (overs < this.range.start + this.param.buffer) {\n      return;\n    }\n    console.log('下个区块', overs);\n    this.checkRange(overs, this.getEndByStart(overs));\n  }\n\n  // return the pass overs according to current scroll offset\n  getScrollOvers() {\n    // if slot header exist, we need subtract its size\n    const offset = this.offset - this.param.slotHeaderSize;\n    if (offset <= 0) {\n      return 0;\n    }\n\n    // if is fixed type, that can be easily\n    if (this.isFixedType()) {\n      return Math.floor(offset / this.fixedSizeValue);\n    }\n\n    let low = 0;\n    let middle = 0;\n    let middleOffset = 0;\n    let high = this.param.uniqueIds.length;\n\n    while (low <= high) {\n      // this.__bsearchCalls++\n      middle = low + Math.floor((high - low) / 2);\n      middleOffset = this.getIndexOffset(middle);\n\n      if (middleOffset === offset) {\n        return middle;\n      } else if (middleOffset < offset) {\n        low = middle + 1;\n      } else if (middleOffset > offset) {\n        high = middle - 1;\n      }\n    }\n\n    return low > 0 ? --low : 0;\n  }\n\n  // return a scroll offset from given index, can efficiency be improved more here?\n  // although the call frequency is very high, its only a superposition of numbers\n  getIndexOffset(givenIndex) {\n    if (!givenIndex) {\n      return 0;\n    }\n\n    let offset = 0;\n    let indexSize = 0;\n    for (let index = 0; index < givenIndex; index++) {\n      // this.__getIndexOffsetCalls++\n      indexSize = this.sizes.get(this.param.uniqueIds[index]);\n      offset =\n        offset +\n        (typeof indexSize === 'number' ? indexSize : this.getEstimateSize());\n    }\n\n    // remember last calculate index\n    this.lastCalcIndex = Math.max(this.lastCalcIndex, givenIndex - 1);\n    this.lastCalcIndex = Math.min(this.lastCalcIndex, this.getLastIndex());\n\n    return offset;\n  }\n\n  // is fixed size type\n  isFixedType() {\n    return this.calcType === CALC_TYPE.FIXED;\n  }\n\n  // return the real last index\n  getLastIndex() {\n    return this.param.uniqueIds.length - 1;\n  }\n\n  // in some conditions range is broke, we need correct it\n  // and then decide whether need update to next range\n  checkRange(start, end) {\n    const keeps = this.param.keeps;\n    const total = this.param.uniqueIds.length;\n\n    // datas less than keeps, render all\n    if (total <= keeps) {\n      start = 0;\n      end = this.getLastIndex();\n    } else if (end - start < keeps - 1) {\n      // if range length is less than keeps, corrent it base on end\n      start = end - keeps + 1;\n    }\n\n    if (this.range.start !== start) {\n      this.updateRange(start, end);\n    }\n  }\n\n  // setting to a new range and rerender\n  updateRange(start, end) {\n    this.range.start = start;\n    this.range.end = end;\n    this.range.padFront = this.getPadFront();\n    this.range.padBehind = this.getPadBehind();\n    this.callUpdate(this.getRange());\n  }\n\n  // return end base on start\n  getEndByStart(start) {\n    const theoryEnd = start + this.param.keeps - 1;\n    const truelyEnd = Math.min(theoryEnd, this.getLastIndex());\n    return truelyEnd;\n  }\n\n  // return total front offset\n  getPadFront() {\n    if (this.isFixedType()) {\n      return this.fixedSizeValue * this.range.start;\n    } else {\n      return this.getIndexOffset(this.range.start);\n    }\n  }\n\n  // return total behind offset\n  getPadBehind() {\n    const end = this.range.end;\n    const lastIndex = this.getLastIndex();\n\n    if (this.isFixedType()) {\n      return (lastIndex - end) * this.fixedSizeValue;\n    }\n\n    // if it's all calculated, return the exactly offset\n    if (this.lastCalcIndex === lastIndex) {\n      return this.getIndexOffset(lastIndex) - this.getIndexOffset(end);\n    } else {\n      // if not, use a estimated value\n      return (lastIndex - end) * this.getEstimateSize();\n    }\n  }\n\n  // get the item estimate size\n  getEstimateSize() {\n    return this.isFixedType()\n      ? this.fixedSizeValue\n      : this.firstRangeAverageSize || this.param.estimateSize;\n  }\n}\n","/**\n * props declaration for default, item and slot component\n */\n\nimport { PropType } from 'vue';\n\nexport const VirtualProps = {\n  dataKey: {\n    type: [String, Function],\n    required: true,\n  },\n  dataSources: {\n    type: Array,\n    required: true,\n    default: () => [],\n  },\n  dataComponent: {\n    type: [Object, Function],\n    required: true,\n  },\n\n  keeps: {\n    type: Number,\n    default: 30,\n  },\n  extraProps: {\n    type: Object,\n  },\n  estimateSize: {\n    type: Number,\n    default: 50,\n  },\n\n  direction: {\n    type: String as PropType<'vertical' | 'horizontal'>,\n    default: 'vertical', // the other value is horizontal\n  },\n  start: {\n    type: Number,\n    default: 0,\n  },\n  offset: {\n    type: Number,\n    default: 0,\n  },\n  topThreshold: {\n    type: Number,\n    default: 0,\n  },\n  bottomThreshold: {\n    type: Number,\n    default: 0,\n  },\n  pageMode: {\n    type: Boolean,\n    default: false,\n  },\n  rootTag: {\n    type: String,\n    default: 'div',\n  },\n  wrapTag: {\n    type: String,\n    default: 'div',\n  },\n  wrapClass: {\n    type: String,\n    default: 'wrap',\n  },\n  wrapStyle: {\n    type: Object,\n  },\n  itemTag: {\n    type: String,\n    default: 'div',\n  },\n  itemClass: {\n    type: String,\n    default: '',\n  },\n  itemClassAdd: {\n    type: Function,\n  },\n  itemStyle: {\n    type: Object,\n  },\n  headerTag: {\n    type: String,\n    default: 'div',\n  },\n  headerClass: {\n    type: String,\n    default: '',\n  },\n  headerStyle: {\n    type: Object,\n  },\n  footerTag: {\n    type: String,\n    default: 'div',\n  },\n  footerClass: {\n    type: String,\n    default: '',\n  },\n  footerStyle: {\n    type: Object,\n  },\n  itemScopedSlots: {\n    type: Object,\n  },\n};\n\nexport const ItemProps = {\n  index: {\n    type: Number,\n  },\n  event: {\n    type: String,\n  },\n  tag: {\n    type: String,\n  },\n  horizontal: {\n    type: Boolean,\n  },\n  source: {\n    type: Object,\n  },\n  component: {\n    type: [Object, Function],\n  },\n  uniqueKey: {\n    type: [String, Number],\n  },\n  extraProps: {\n    type: Object,\n  },\n  scopedSlots: {\n    type: Object,\n  },\n};\n\nexport const SlotProps = {\n  event: {\n    type: String,\n  },\n  uniqueKey: {\n    type: String,\n  },\n  tag: {\n    type: String,\n  },\n  horizontal: {\n    type: Boolean,\n  },\n};\n","import {\n  computed,\n  defineComponent,\n  onMounted,\n  onUnmounted,\n  onUpdated,\n  ref,\n  Ref,\n} from 'vue';\nimport { ItemProps, SlotProps } from './props';\n\nconst useResizeChange = (\n  props: any,\n  rootRef: Ref<HTMLElement | null>,\n  emit: any,\n) => {\n  let resizeObserver: ResizeObserver | null = null;\n  const shapeKey = computed(() =>\n    props.horizontal ? 'offsetWidth' : 'offsetHeight',\n  );\n\n  const getCurrentSize = () => {\n    return rootRef.value ? rootRef.value[shapeKey.value] : 0;\n  };\n\n  // tell parent current size identify by unqiue key\n  const dispatchSizeChange = () => {\n    const { event, uniqueKey, hasInitial } = props;\n    emit(event, uniqueKey, getCurrentSize(), hasInitial);\n  };\n\n  onMounted(() => {\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(() => {\n        dispatchSizeChange();\n      });\n      rootRef.value && resizeObserver.observe(rootRef.value);\n    }\n  });\n\n  onUpdated(() => {\n    dispatchSizeChange();\n  });\n\n  onUnmounted(() => {\n    if (resizeObserver) {\n      resizeObserver.disconnect();\n      resizeObserver = null;\n    }\n  });\n};\n\nexport const Item = defineComponent({\n  name: 'VirtualListItem',\n  props: ItemProps,\n  emits: ['itemResize'],\n  setup(props, { emit }) {\n    const rootRef = ref<HTMLElement | null>(null);\n    useResizeChange(props, rootRef, emit);\n\n    return () => {\n      const {\n        tag: Tag,\n        component: Comp,\n        extraProps = {},\n        index,\n        source,\n        scopedSlots = {},\n        uniqueKey,\n      } = props;\n      const mergedProps = {\n        ...extraProps,\n        source,\n        index,\n      };\n\n      return (\n        <Tag key={uniqueKey} ref={rootRef}>\n          <Comp {...mergedProps} scopedSlots={scopedSlots} />\n        </Tag>\n      );\n    };\n  },\n});\n\nexport const Slot = defineComponent({\n  name: 'VirtualListSlot',\n  props: SlotProps,\n  emits: ['slotResize'],\n  setup(props, { slots, emit }) {\n    const rootRef = ref<HTMLElement | null>(null);\n    useResizeChange(props, rootRef, emit);\n\n    return () => {\n      const { tag: Tag, uniqueKey } = props;\n\n      return (\n        <Tag ref={rootRef} key={uniqueKey}>\n          {slots.default?.()}\n        </Tag>\n      );\n    };\n  },\n});\n","import {\n  defineComponent,\n  onActivated,\n  onBeforeMount,\n  onMounted,\n  onUnmounted,\n  ref,\n  watch,\n  withDirectives,\n} from 'vue';\nimport Virtual from './virtual';\nimport { Item, Slot } from './item';\nimport { VirtualProps } from './props';\n\nenum EVENT_TYPE {\n  ITEM = 'itemResize',\n  SLOT = 'slotResize',\n}\n\nenum SLOT_TYPE {\n  HEADER = 'thead', // string value also use for aria role attribute\n  FOOTER = 'tfoot',\n}\n\ninterface Range {\n  start: number;\n  end: number;\n  padFront: number;\n  padBehind: number;\n}\n\nexport default defineComponent({\n  name: 'VirtualList',\n  props: VirtualProps,\n  setup(props, { emit, slots, expose }) {\n    const isHorizontal = props.direction === 'horizontal';\n    const directionKey = isHorizontal ? 'scrollLeft' : 'scrollTop';\n    const range = ref<Range | null>(null);\n    const root = ref<HTMLElement | null>();\n    const shepherd = ref<HTMLDivElement | null>(null);\n    let virtual: Virtual;\n\n    /**\n     * watch\n     */\n    watch(\n      () => props.dataSources.length,\n      () => {\n        virtual.updateParam('uniqueIds', getUniqueIdFromDataSources());\n        virtual.handleDataSourcesChange();\n      },\n    );\n    watch(\n      () => props.keeps,\n      (newValue) => {\n        virtual.updateParam('keeps', newValue);\n        virtual.handleSlotSizeChange();\n      },\n    );\n    watch(\n      () => props.start,\n      (newValue) => {\n        scrollToIndex(newValue);\n      },\n    );\n    watch(\n      () => props.offset,\n      (newValue) => scrollToOffset(newValue),\n    );\n\n    /**\n     * methods\n     */\n    // get item size by id\n    const getSize = (id) => {\n      return virtual.sizes.get(id);\n    };\n    const getOffset = () => {\n      if (props.pageMode) {\n        return (\n          document.documentElement[directionKey] || document.body[directionKey]\n        );\n      } else {\n        return root.value ? Math.ceil(root.value[directionKey]) : 0;\n      }\n    };\n    // return client viewport size\n    const getClientSize = () => {\n      const key = isHorizontal ? 'clientWidth' : 'clientHeight';\n      if (props.pageMode) {\n        return document.documentElement[key] || document.body[key];\n      } else {\n        return root.value ? Math.ceil(root.value[key]) : 0;\n      }\n    };\n    // return all scroll size\n    const getScrollSize = () => {\n      const key = isHorizontal ? 'scrollWidth' : 'scrollHeight';\n      if (props.pageMode) {\n        return document.documentElement[key] || document.body[key];\n      } else {\n        return root.value ? Math.ceil(root.value[key]) : 0;\n      }\n    };\n    const emitEvent = (offset, clientSize, scrollSize, evt) => {\n      emit('scroll', evt, virtual.getRange());\n\n      if (\n        virtual.isFront() &&\n        !!props.dataSources.length &&\n        offset - props.topThreshold <= 0\n      ) {\n        emit('totop');\n      } else if (\n        virtual.isBehind() &&\n        offset + clientSize + props.bottomThreshold >= scrollSize\n      ) {\n        emit('tobottom');\n      }\n    };\n    const onScroll = (evt) => {\n      const offset = getOffset();\n      const clientSize = getClientSize();\n      const scrollSize = getScrollSize();\n\n      // \biOS scroll-spring-back behavior will make direction mistake\n      if (offset < 0 || offset + clientSize > scrollSize + 1 || !scrollSize) {\n        return;\n      }\n\n      virtual.handleScroll(offset);\n      emitEvent(offset, clientSize, scrollSize, evt);\n    };\n\n    const getUniqueIdFromDataSources = () => {\n      const { dataKey, dataSources = [] } = props;\n      return dataSources.map((dataSource: any) =>\n        typeof dataKey === 'function'\n          ? dataKey(dataSource)\n          : dataSource[dataKey],\n      );\n    };\n    const onRangeChanged = (newRange: any) => {\n      range.value = newRange;\n    };\n    const installVirtual = () => {\n      virtual = new Virtual(\n        {\n          slotHeaderSize: 0,\n          slotFooterSize: 0,\n          keeps: props.keeps,\n          estimateSize: props.estimateSize,\n          buffer: Math.ceil(props.keeps / 10), // recommend for a third of keeps\n          uniqueIds: getUniqueIdFromDataSources(),\n        },\n        onRangeChanged,\n      );\n\n      // sync initial range\n      range.value = virtual.getRange();\n    };\n    // set current scroll position to a expectant index\n    const scrollToIndex = (index: number) => {\n      // scroll to bottom\n      if (index >= props.dataSources.length - 1) {\n        scrollToBottom();\n      } else {\n        const offset = virtual.getOffset(index);\n        scrollToOffset(offset);\n      }\n    };\n    // set current scroll position to a expectant offset\n    const scrollToOffset = (offset: number) => {\n      if (props.pageMode) {\n        document.body[directionKey] = offset;\n        document.documentElement[directionKey] = offset;\n      } else {\n        if (root.value) {\n          root.value[directionKey] = offset;\n        }\n      }\n    };\n    // get the real render slots based on range data\n    // in-place patch strategy will try to reuse components as possible\n    // so those components that are reused will not trigger lifecycle mounted\n    const getRenderSlots = () => {\n      const slots = [];\n      const { start, end } = range.value;\n      console.log('更换内容', start, end);\n      const {\n        dataSources,\n        dataKey,\n        itemClass,\n        itemTag,\n        itemStyle,\n        extraProps,\n        dataComponent,\n        itemScopedSlots,\n      } = props;\n      for (let index = start; index <= end; index++) {\n        const dataSource = dataSources[index];\n        if (dataSource) {\n          const uniqueKey =\n            typeof dataKey === 'function'\n              ? dataKey(dataSource)\n              : dataSource[dataKey];\n          if (typeof uniqueKey === 'string' || typeof uniqueKey === 'number') {\n            slots.push(\n              <Item\n                key={uniqueKey}\n                index={index}\n                tag={itemTag}\n                event={EVENT_TYPE.ITEM}\n                horizontal={isHorizontal}\n                uniqueKey={uniqueKey}\n                source={dataSource}\n                extraProps={extraProps}\n                component={dataComponent}\n                scopedSlots={itemScopedSlots}\n                style={itemStyle}\n                class={`${itemClass}${\n                  props.itemClassAdd ? ' ' + props.itemClassAdd(index) : ''\n                }`}\n                onItemResize={onItemResized}\n              />,\n            );\n          } else {\n            console.warn(\n              `Cannot get the data-key '${dataKey}' from data-sources.`,\n            );\n          }\n        } else {\n          console.warn(`Cannot get the index '${index}' from data-sources.`);\n        }\n      }\n      return slots;\n    };\n\n    // event called when each item mounted or size changed\n    const onItemResized = (id: string, size: number) => {\n      virtual.saveSize(id, size);\n      emit('resized', id, size);\n    };\n\n    // event called when slot mounted or size changed\n    const onSlotResized = (type: SLOT_TYPE, size: number, hasInit: boolean) => {\n      if (type === SLOT_TYPE.HEADER) {\n        virtual.updateParam('slotHeaderSize', size);\n      } else if (type === SLOT_TYPE.FOOTER) {\n        virtual.updateParam('slotFooterSize', size);\n      }\n\n      if (hasInit) {\n        virtual.handleSlotSizeChange();\n      }\n    };\n\n    // set current scroll position to bottom\n    const scrollToBottom = () => {\n      if (shepherd.value) {\n        const offset =\n          shepherd.value[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n        scrollToOffset(offset);\n\n        // check if it's really scrolled to the bottom\n        // maybe list doesn't render and calculate to last range\n        // so we need retry in next event loop until it really at bottom\n        setTimeout(() => {\n          if (getOffset() + getClientSize() < getScrollSize()) {\n            scrollToBottom();\n          }\n        }, 3);\n      }\n    };\n\n    // when using page mode we need update slot header size manually\n    // taking root offset relative to the browser as slot header size\n    const updatePageModeFront = () => {\n      if (root.value) {\n        const rect = root.value.getBoundingClientRect();\n        const { defaultView } = root.value.ownerDocument;\n        const offsetFront = isHorizontal\n          ? rect.left + defaultView!.pageXOffset\n          : rect.top + defaultView!.pageYOffset;\n        virtual.updateParam('slotHeaderSize', offsetFront);\n      }\n    };\n\n    // get the total number of stored (rendered) items\n    const getSizes = () => {\n      return virtual.sizes.size;\n    };\n\n    /**\n     * life cycles\n     */\n    onBeforeMount(() => {\n      installVirtual();\n    });\n\n    // set back offset when awake from keep-alive\n    onActivated(() => {\n      scrollToOffset(virtual.offset);\n    });\n\n    onMounted(() => {\n      // set position\n      if (props.start) {\n        scrollToIndex(props.start);\n      } else if (props.offset) {\n        scrollToOffset(props.offset);\n      }\n\n      // in page mode we bind scroll event to document\n      if (props.pageMode) {\n        updatePageModeFront();\n        document.addEventListener('scroll', onScroll, {\n          passive: false,\n        });\n      }\n    });\n\n    onUnmounted(() => {\n      virtual.destroy();\n      if (props.pageMode) {\n        document.removeEventListener('scroll', onScroll);\n      }\n    });\n\n    /**\n     * public methods\n     */\n    expose({\n      scrollToBottom,\n      getSizes,\n      getSize,\n      getOffset,\n      getScrollSize,\n      getClientSize,\n      scrollToOffset,\n      scrollToIndex,\n    });\n\n    return () => {\n      const {\n        pageMode,\n        rootTag: RootTag,\n        wrapTag: WrapTag,\n        wrapClass,\n        wrapStyle,\n        headerTag,\n        headerClass,\n        headerStyle,\n        footerTag,\n        footerClass,\n        footerStyle,\n      } = props;\n      const { padFront, padBehind } = range.value!;\n      const paddingStyle = {\n        padding: isHorizontal\n          ? `0px ${padBehind}px 0px ${padFront}px`\n          : `${padFront}px 0px ${padBehind}px`,\n      };\n      const wrapperStyle = wrapStyle\n        ? Object.assign({}, wrapStyle, paddingStyle)\n        : paddingStyle;\n      const { header, footer } = slots;\n\n      return (\n        <RootTag ref={root} onScroll={!pageMode && onScroll}>\n          {/* header slot */}\n          {header && (\n            <Slot\n              class={headerClass}\n              style={headerStyle}\n              tag={headerTag}\n              event={EVENT_TYPE.SLOT}\n              uniqueKey={SLOT_TYPE.HEADER}\n              onSlotResize={onSlotResized}\n            >\n              {header()}\n            </Slot>\n          )}\n\n          {/* main list */}\n          <WrapTag class={wrapClass} style={wrapperStyle}>\n            {getRenderSlots()}\n          </WrapTag>\n\n          {/* footer slot */}\n          {footer && (\n            <Slot\n              class={footerClass}\n              style={footerStyle}\n              tag={footerTag}\n              event={EVENT_TYPE.SLOT}\n              uniqueKey={SLOT_TYPE.FOOTER}\n              onSlotResize={onSlotResized}\n            >\n              {footer()}\n            </Slot>\n          )}\n\n          {/* an empty element use to scroll to bottom */}\n          <div\n            ref={shepherd}\n            style={{\n              width: isHorizontal ? '0px' : '100%',\n              height: isHorizontal ? '100%' : '0px',\n            }}\n          />\n        </RootTag>\n      );\n    };\n  },\n});\n"],"names":["DIRECTION_TYPE","FRONT","BEHIND","CALC_TYPE","INIT","FIXED","DYNAMIC","LEADING_BUFFER","Virtual","param","callUpdate","_classCallCheck","init","_createClass","key","value","sizes","Map","firstRangeTotalSize","firstRangeAverageSize","lastCalcIndex","fixedSizeValue","calcType","offset","direction","range","Object","create","checkRange","keeps","destroy","getRange","start","end","padFront","padBehind","isBehind","isFront","getOffset","getIndexOffset","slotHeaderSize","updateParam","_this","forEach","v","includes","saveSize","id","size","set","Math","min","uniqueIds","length","_toConsumableArray","values","reduce","acc","val","round","handleDataSourcesChange","max","updateRange","getEndByStart","handleSlotSizeChange","handleScroll","handleFront","handleBehind","overs","getScrollOvers","buffer","console","log","isFixedType","floor","low","middle","middleOffset","high","givenIndex","indexSize","index","get","getEstimateSize","getLastIndex","total","getPadFront","getPadBehind","theoryEnd","truelyEnd","lastIndex","estimateSize","VirtualProps","dataKey","type","String","Function","required","dataSources","Array","_default","dataComponent","Number","extraProps","topThreshold","bottomThreshold","pageMode","Boolean","rootTag","wrapTag","wrapClass","wrapStyle","itemTag","itemClass","itemClassAdd","itemStyle","headerTag","headerClass","headerStyle","footerTag","footerClass","footerStyle","itemScopedSlots","ItemProps","event","tag","horizontal","source","component","uniqueKey","scopedSlots","SlotProps","useResizeChange","props","rootRef","emit","resizeObserver","shapeKey","computed","getCurrentSize","dispatchSizeChange","hasInitial","onMounted","ResizeObserver","observe","onUpdated","onUnmounted","disconnect","Item","defineComponent","name","emits","setup","_ref","ref","Tag","Comp","_props$extraProps","_props$scopedSlots","mergedProps","_objectSpread","_createVNode","Slot","_ref2","slots","_slots$default","call","EVENT_TYPE","SLOT_TYPE","expose","isHorizontal","directionKey","root","shepherd","virtual","watch","getUniqueIdFromDataSources","newValue","scrollToIndex","scrollToOffset","getSize","document","documentElement","body","ceil","getClientSize","getScrollSize","emitEvent","clientSize","scrollSize","evt","onScroll","_props$dataSources","map","dataSource","onRangeChanged","newRange","installVirtual","slotFooterSize","scrollToBottom","getRenderSlots","_range$value","push","ITEM","concat","onItemResized","warn","onSlotResized","hasInit","HEADER","FOOTER","setTimeout","updatePageModeFront","rect","getBoundingClientRect","defaultView","ownerDocument","offsetFront","left","pageXOffset","top","pageYOffset","getSizes","onBeforeMount","onActivated","addEventListener","passive","removeEventListener","RootTag","WrapTag","paddingStyle","padding","wrapperStyle","assign","header","footer","SLOT","width","height"],"mappings":"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"}